name: Daily MoE Paper Update

on:
  schedule:
    # Run daily at 9:00 AM UTC (you can adjust this time)
    - cron: '0 9 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-papers:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        pip install -r scripts/requirements.txt
        
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Run paper update script (single paper per run)
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        MINERU_API_KEY: ${{ secrets.MINERU_API_KEY }}
      run: python scripts/update_papers.py
      
    - name: Check for changes and create PR
      id: verify-changed-files
      run: |
        echo "Checking for new commits..."
        
        # Set date variables
        CURRENT_DATE=$(date +'%Y-%m-%d')
        CURRENT_DATETIME=$(date +'%Y-%m-%d %H:%M:%S UTC')
        BRANCH_NAME="moe-paper-$(date +'%Y%m%d-%H%M%S')"
        
        echo "current_date=$CURRENT_DATE" >> $GITHUB_OUTPUT
        echo "current_datetime=$CURRENT_DATETIME" >> $GITHUB_OUTPUT
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        
        # Get list of new commits (commits not in origin/main)
        git fetch origin main
        NEW_COMMITS=$(git rev-list HEAD ^origin/main --reverse)
        
        if [ -z "$NEW_COMMITS" ]; then
          echo "No new commits found."
          echo "changed=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "Found $(echo "$NEW_COMMITS" | wc -l) new commit(s)"
        echo "changed=true" >> $GITHUB_OUTPUT
        
        # Since we process only 1 paper per run, we expect only 1 commit
        # Get the commit message for PR body
        LATEST_COMMIT=$(git rev-list HEAD ^origin/main | head -1)
        COMMIT_MESSAGE=$(git log --format="%s" -n 1 $LATEST_COMMIT)
        PAPER_TITLE=$(echo "$COMMIT_MESSAGE" | sed 's/Add MoE paper: //')
        
        # Store paper title for use in PR creation
        echo "paper_title=$PAPER_TITLE" >> $GITHUB_OUTPUT
        echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
      
    - name: Create Pull Request (Single Paper)
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.PAT_TOKEN }}
        commit-message: "${{ steps.verify-changed-files.outputs.commit_message }}"
        title: "📄 Add MoE Paper: ${{ steps.verify-changed-files.outputs.paper_title }}"
        body: |
          ## 🔬 New MoE Paper Added
          
          This PR adds a new paper related to Mixture of Experts (MoE) research:
          
          **Paper**: ${{ steps.verify-changed-files.outputs.paper_title }}
          
          ### Features Added:
          - ✅ Paper summary in English and Chinese
          - ✅ Extracted key figure/diagram using AI image selection
          - ✅ Proper formatting and metadata
          
          ### Technical Details:
          - 🤖 Processed using GPT-4o-mini for intelligent image selection
          - 🖼️ Images extracted via MinerU API for PDF analysis
          - 📝 Bilingual summaries generated automatically
          
          ---
          🤖 Generated automatically by GitHub Actions  
          📅 Run Date: ${{ steps.verify-changed-files.outputs.current_datetime }}  
          🔗 Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        branch: ${{ steps.verify-changed-files.outputs.branch_name }}
        delete-branch: true
      
    - name: No changes found
      if: steps.verify-changed-files.outputs.changed == 'false'
      run: |
        echo "No new MoE papers found or no changes to commit."